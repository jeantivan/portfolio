---
import { getCollection, getEntries } from "astro:content";
import { Image } from "astro:assets";
import BaseLayout from "@/layouts/BaseLayout.astro";
import Container from "@/components/common/Container.astro";
import ButtonLink from "@/components/common/ButtonLink.astro";
import Icon from "@/components/common/Icon.astro";
import Heading from "@/components/Heading.astro";
import Text from "@/components/common/Text.astro";

import * as m from "@/paraglide/messages";

export async function getStaticPaths() {
  const projects = await getCollection(
    "project",
    (project) => project.data.language === "es",
  );

  const paths = projects.map((project) => {
    const slug = project.slug.split("/")[1];

    return { params: { slug: slug }, props: { project } };
  });

  return paths;
}

const { project } = Astro.props;
const {
  links,
  mainImage,
  title,
  builtWith: builtWithReferences,
} = project.data;
const builtWith = await getEntries(builtWithReferences);

const { Content } = await project.render();
---

<BaseLayout title={title} description="Description project">
  <Container class="pt-2 pb-8 md:pt-4 md:pb-12 grid grid-cols-12">
    <div class="grid gap-4 md:gap-8 col-span-12 md:col-span-10">
      <section class="">
        <Heading text={title} variant="title" />
      </section>
      <section class="w-full aspect-video">
        <Image
          alt={mainImage.alt}
          src={mainImage.src.dark}
          class="rounded-xl object-contain hidden dark:block"
        />
        <Image
          alt={mainImage.alt}
          src={mainImage.src.light}
          class="rounded-xl object-contain block dark:hidden"
        />
      </section>
      <section class:list={["grid grid-flow-col gap-2 md:gap-4"]}>
        <ButtonLink
          href={links.github}
          target="_blank"
          rel="noopener noreferrer"
        >
          <Icon
            icon="github-logo"
            label="Github"
            size="20px"
            class="inline-block mr-2.5"
          />
          {m.ProjectPage_links_github()}
        </ButtonLink>
        {
          links.website && (
            <ButtonLink href={links.website} rel="noopener noreferrer">
              <Icon
                icon="globe"
                label="Website"
                size="20px"
                class="inline-block mr-2.5"
              />
              {m.ProjectPage_links_website()}
            </ButtonLink>
          )
        }
      </section>
      <section class="grid gap-4">
        <Heading
          variant="subheading"
          display
          text={m.ProjectPage_content_title()}
        />
        <Content
          components={{
            p: Text,
          }}
        />
      </section>
      <section class="">
        <Text variant="subtitle" weight="bold" color="secondary" class="mb-2">
          {m.ProjectPage_builtWith()}
        </Text>
        <div class="flex gap-x-3 gap-y-1 flex-wrap">
          {
            builtWith.map((skill) => {
              return (
                <Text weight="light" variant="subtitle">
                  <span class="text-primary-8 ">#</span>
                  {skill.data.name}
                </Text>
              );
            })
          }
        </div>
      </section>
    </div>
  </Container>
</BaseLayout>
