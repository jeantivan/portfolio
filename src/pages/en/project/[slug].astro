---
import { getCollection, getEntries } from "astro:content";
import { Image } from "astro:assets";
import BaseLayout from "@/layouts/BaseLayout.astro";
import Container from "@/components/common/Container.astro";
import ButtonLink from "@/components/common/ButtonLink.astro";
import Icon from "@/components/common/Icon.astro";
import Heading from "@/components/Heading.astro";
import Text from "@/components/common/Text.astro";

import * as m from "@/paraglide/messages";

export async function getStaticPaths() {
  const projects = await getCollection(
    "project",
    (project) => project.data.language === "en",
  );

  const paths = projects.map((project) => {
    const slug = project.slug.split("/")[1];

    return { params: { slug: slug }, props: { project } };
  });

  return paths;
}

const { project } = Astro.props;
const {
  links,
  mainImage,
  title,
  builtWith: builtWithReferences,
} = project.data;
const builtWith = await getEntries(builtWithReferences);

const { Content } = await project.render();
---

<BaseLayout title={title} description="Description project">
  <Container class="pt-2 pb-8 md:py-6 grid grid-cols-10 gap-4">
    <section
      class:list={[
        "backdrop-blur-sm bg-background-1",
        "col-span-10 md:col-span-3 md:order-2",
        "grid grid-cols-2 md:grid-cols-1 content-start gap-2 md:gap-4",
        "sticky top-0 py-2 md:py-0",
      ]}
    >
      <ButtonLink href={links.github} target="_blank" rel="noopener noreferrer">
        <Icon
          icon="github-logo"
          label="Github"
          size="20px"
          class="inline-block mr-2.5"
        />
        {m.ProjectPage_links_github()}
      </ButtonLink>
      {
        links.website && (
          <ButtonLink href={links.website} rel="noopener noreferrer">
            <Icon
              icon="globe"
              label="Website"
              size="20px"
              class="inline-block mr-2.5"
            />
            {m.ProjectPage_links_website()}
          </ButtonLink>
        )
      }
    </section>
    <section class="col-span-10 md:col-span-7">
      <div class="mb-6">
        <div class="w-full">
          <Image
            alt={mainImage.alt}
            src={mainImage.src.dark}
            class="rounded-xl"
          />
        </div>
      </div>
      <Heading text={title} variant="heading" class="mb-3 md:mb-6" />
      <div class="mb-3 md:mb-6 grid gap-4">
        <Content
          components={{
            p: Text,
          }}
        />
      </div>
      <div class="col-span-10">
        <Text variant="subtitle" weight="bold" color="secondary" class="mb-2">
          {m.ProjectPage_builtWith()}
        </Text>
        <div class="flex gap-x-3 gap-y-1 flex-wrap">
          {
            builtWith.map((skill) => {
              return (
                <Text weight="light" variant="subtitle">
                  <span class="text-primary-8 ">#</span>
                  {skill.data.name}
                </Text>
              );
            })
          }
        </div>
      </div>
    </section>
  </Container>
</BaseLayout>
